drop index if exists public."idx_community_follower_user_id";
drop index if exists public."idx_comment_saved_user_id";

CREATE OR REPLACE VIEW hexbear.post_fast_view
 AS
 SELECT pav.id,
    pav.name,
    pav.url,
    pav.body,
    pav.creator_id,
    pav.community_id,
    pav.removed,
    pav.locked,
    pav.published,
    pav.updated,
    pav.deleted,
    pav.nsfw,
    pav.stickied,
    pav.embed_title,
    pav.embed_description,
    pav.embed_html,
    pav.thumbnail_url,
    pav.ap_id,
    pav.local,
    pav.creator_actor_id,
    pav.creator_local,
    pav.creator_name,
    pav.creator_preferred_username,
    pav.creator_published,
    pav.creator_avatar,
    pav.creator_tags,
    pav.creator_community_tags,
    pav.banned,
    pav.banned_from_community,
    pav.community_actor_id,
    pav.community_local,
    pav.community_name,
    pav.community_icon,
    pav.community_removed,
    pav.community_deleted,
    pav.community_nsfw,
    pav.number_of_comments,
    pav.score,
    pav.upvotes,
    pav.downvotes,
    pav.hot_rank,
    pav.hot_rank_active,
    pav.newest_activity_time,
    us.id AS user_id,
    us.user_vote AS my_vote,
    us.is_subbed::boolean AS subscribed,
    us.is_read::boolean AS read,
    us.is_saved::boolean AS saved
   FROM ( SELECT p.id,
            p.name,
            p.url,
            p.body,
            p.creator_id,
            p.community_id,
            p.removed,
            p.locked,
            p.published,
            p.updated,
            p.deleted,
            p.nsfw,
            p.stickied,
            p.embed_title,
            p.embed_description,
            p.embed_html,
            p.thumbnail_url,
            p.ap_id,
            p.local,
            u.actor_id AS creator_actor_id,
            u.local AS creator_local,
            u.name AS creator_name,
            u.preferred_username AS creator_preferred_username,
            u.published AS creator_published,
            u.avatar AS creator_avatar,
            ut.tags AS creator_tags,
            cut.tags AS creator_community_tags,
            u.banned,
            cb.id::boolean AS banned_from_community,
            c.actor_id AS community_actor_id,
            c.local AS community_local,
            c.name AS community_name,
            c.icon AS community_icon,
            c.removed AS community_removed,
            c.deleted AS community_deleted,
            c.nsfw AS community_nsfw,
            COALESCE(cps.number_of_comments, 0)::bigint AS number_of_comments,
            COALESCE(cps.score, 0)::bigint AS score,
            COALESCE(cps.upvotes, 0)::bigint AS upvotes,
            COALESCE(cps.downvotes, 0)::bigint AS downvotes,
            COALESCE(cps.hot_rank, 0) AS hot_rank,
            COALESCE(cps.hot_rank_active, 0) AS hot_rank_active,
            COALESCE(cps.newest_activity_time, p.published) AS newest_activity_time
           FROM post p
             LEFT JOIN user_ u ON p.creator_id = u.id
             LEFT JOIN user_tag ut ON p.creator_id = ut.user_id
             LEFT JOIN community_user_tag cut ON p.creator_id = cut.user_id AND p.community_id = cut.community_id
             LEFT JOIN community_user_ban cb ON p.creator_id = cb.user_id AND p.community_id = cb.community_id
             LEFT JOIN community c ON p.community_id = c.id
             LEFT JOIN hexbear.post_stat cps ON cps.post_id = p.id) pav
     CROSS JOIN LATERAL ( SELECT u.id,
            COALESCE(cf.community_id, 0) AS is_subbed,
            COALESCE(pr.post_id, 0) AS is_read,
            COALESCE(ps.post_id, 0) AS is_saved,
            COALESCE(pl.score::integer, 0) AS user_vote
           FROM user_ u
             LEFT JOIN community_user_ban cb ON u.id = cb.user_id AND cb.community_id = pav.community_id
             LEFT JOIN community_follower cf ON u.id = cf.user_id AND cf.community_id = pav.community_id
             LEFT JOIN post_read pr ON u.id = pr.user_id AND pr.post_id = pav.id
             LEFT JOIN post_saved ps ON u.id = ps.user_id AND ps.post_id = pav.id
             LEFT JOIN post_like pl ON u.id = pl.user_id AND pav.id = pl.post_id) us
UNION ALL
 SELECT p.id,
    p.name,
    p.url,
    p.body,
    p.creator_id,
    p.community_id,
    p.removed,
    p.locked,
    p.published,
    p.updated,
    p.deleted,
    p.nsfw,
    p.stickied,
    p.embed_title,
    p.embed_description,
    p.embed_html,
    p.thumbnail_url,
    p.ap_id,
    p.local,
    u.actor_id AS creator_actor_id,
    u.local AS creator_local,
    u.name AS creator_name,
    u.preferred_username AS creator_preferred_username,
    u.published AS creator_published,
    u.avatar AS creator_avatar,
    ut.tags AS creator_tags,
    cut.tags AS creator_community_tags,
    u.banned,
    cb.id::boolean AS banned_from_community,
    c.actor_id AS community_actor_id,
    c.local AS community_local,
    c.name AS community_name,
    c.icon AS community_icon,
    c.removed AS community_removed,
    c.deleted AS community_deleted,
    c.nsfw AS community_nsfw,
    COALESCE(cps.number_of_comments, 0)::bigint AS number_of_comments,
    COALESCE(cps.score, 0)::bigint AS score,
    COALESCE(cps.upvotes, 0)::bigint AS upvotes,
    COALESCE(cps.downvotes, 0)::bigint AS downvotes,
    COALESCE(cps.hot_rank, 0) AS hot_rank,
    COALESCE(cps.hot_rank_active, 0) AS hot_rank_active,
    COALESCE(cps.newest_activity_time, p.published) AS newest_activity_time,
    NULL::integer AS user_id,
    NULL::integer AS my_vote,
    NULL::boolean AS subscribed,
    NULL::boolean AS read,
    NULL::boolean AS saved
   FROM post p
     LEFT JOIN user_ u ON p.creator_id = u.id
     LEFT JOIN user_tag ut ON p.creator_id = ut.user_id
     LEFT JOIN community_user_tag cut ON p.creator_id = cut.user_id AND p.community_id = cut.community_id
     LEFT JOIN community_user_ban cb ON p.creator_id = cb.user_id AND p.community_id = cb.community_id
     LEFT JOIN community c ON p.community_id = c.id
     LEFT JOIN hexbear.post_stat cps ON cps.post_id = p.id;

CREATE OR REPLACE VIEW hexbear.comment_fast_view
 AS
 SELECT cav.id,
    cav.creator_id,
    cav.post_id,
    cav.parent_id,
    cav.content,
    cav.removed,
    cav.read,
    cav.published,
    cav.updated,
    cav.deleted,
    cav.ap_id,
    cav.local,
    cav.post_name,
    cav.community_id,
    cav.community_actor_id,
    cav.community_local,
    cav.community_name,
    cav.community_icon,
    cav.banned,
    cav.banned_from_community,
    cav.creator_actor_id,
    cav.creator_local,
    cav.creator_name,
    cav.creator_preferred_username,
    cav.creator_published,
    cav.creator_avatar,
    cav.creator_tags,
    cav.creator_community_tags,
    cav.score,
    cav.upvotes,
    cav.downvotes,
    cav.hot_rank,
    cav.hot_rank_active,
    us.user_id,
    us.my_vote,
    us.subscribed,
    us.saved
   FROM ( SELECT ct.id,
            ct.creator_id,
            ct.post_id,
            ct.parent_id,
            ct.content,
            ct.removed,
            ct.read,
            ct.published,
            ct.updated,
            ct.deleted,
            ct.ap_id,
            ct.local,
            p.name AS post_name,
            p.community_id,
            c.actor_id AS community_actor_id,
            c.local AS community_local,
            c.name AS community_name,
            c.icon AS community_icon,
            u.banned,
            COALESCE(cb.id, 0)::boolean AS banned_from_community,
            u.actor_id AS creator_actor_id,
            u.local AS creator_local,
            u.name AS creator_name,
            u.preferred_username AS creator_preferred_username,
            u.published AS creator_published,
            u.avatar AS creator_avatar,
            ut.tags AS creator_tags,
            cut.tags AS creator_community_tags,
            COALESCE(ccs.score, 0)::bigint AS score,
            COALESCE(ccs.upvotes, 0)::bigint AS upvotes,
            COALESCE(ccs.downvotes, 0)::bigint AS downvotes,
            COALESCE(ccs.hot_rank, 0) AS hot_rank,
            COALESCE(ccs.hot_rank_active, 0) AS hot_rank_active
           FROM comment ct
             LEFT JOIN post p ON ct.post_id = p.id
             LEFT JOIN community c ON p.community_id = c.id
             LEFT JOIN user_ u ON ct.creator_id = u.id
             LEFT JOIN user_tag ut ON ct.creator_id = ut.user_id
             LEFT JOIN community_user_tag cut ON ct.creator_id = cut.user_id AND p.community_id = cut.community_id
             LEFT JOIN community_user_ban cb ON ct.creator_id = cb.user_id AND p.id = ct.post_id AND p.community_id = cb.community_id
             LEFT JOIN hexbear.comment_stat ccs ON ccs.comment_id = ct.id) cav
     CROSS JOIN LATERAL ( SELECT u.id AS user_id,
            COALESCE(cl.score::integer, 0) AS my_vote,
            COALESCE(cf.id, 0)::boolean AS subscribed,
            COALESCE(cs.id, 0)::boolean AS saved
           FROM user_ u
             LEFT JOIN comment_like cl ON u.id = cl.user_id AND cl.comment_id = cav.id
             LEFT JOIN comment_saved cs ON u.id = cs.user_id AND cs.comment_id = cav.id
             LEFT JOIN community_follower cf ON u.id = cf.user_id AND cav.community_id = cf.community_id) us
UNION ALL
 SELECT ct.id,
    ct.creator_id,
    ct.post_id,
    ct.parent_id,
    ct.content,
    ct.removed,
    ct.read,
    ct.published,
    ct.updated,
    ct.deleted,
    ct.ap_id,
    ct.local,
    p.name AS post_name,
    p.community_id,
    c.actor_id AS community_actor_id,
    c.local AS community_local,
    c.name AS community_name,
    c.icon AS community_icon,
    u.banned,
    COALESCE(cb.id, 0)::boolean AS banned_from_community,
    u.actor_id AS creator_actor_id,
    u.local AS creator_local,
    u.name AS creator_name,
    u.preferred_username AS creator_preferred_username,
    u.published AS creator_published,
    u.avatar AS creator_avatar,
    ut.tags AS creator_tags,
    cut.tags AS creator_community_tags,
    COALESCE(ccs.score, 0)::bigint AS score,
    COALESCE(ccs.upvotes, 0)::bigint AS upvotes,
    COALESCE(ccs.downvotes, 0)::bigint AS downvotes,
    COALESCE(ccs.hot_rank, 0) AS hot_rank,
    COALESCE(ccs.hot_rank_active, 0) AS hot_rank_active,
    NULL::integer AS user_id,
    NULL::integer AS my_vote,
    NULL::boolean AS subscribed,
    NULL::boolean AS saved
   FROM comment ct
     LEFT JOIN post p ON ct.post_id = p.id
     LEFT JOIN community c ON p.community_id = c.id
     LEFT JOIN user_ u ON ct.creator_id = u.id
     LEFT JOIN user_tag ut ON ct.creator_id = ut.user_id
     LEFT JOIN community_user_tag cut ON ct.creator_id = cut.user_id AND p.community_id = cut.community_id
     LEFT JOIN community_user_ban cb ON ct.creator_id = cb.user_id AND p.id = ct.post_id AND p.community_id = cb.community_id
     LEFT JOIN hexbear.comment_stat ccs ON ccs.comment_id = ct.id;

CREATE OR REPLACE VIEW hexbear.community_fast_view
 AS
 SELECT ac.id,
    ac.name,
    ac.title,
    ac.icon,
    ac.banner,
    ac.description,
    ac.category_id,
    ac.creator_id,
    ac.removed,
    ac.published,
    ac.updated,
    ac.deleted,
    ac.nsfw,
    ac.actor_id,
    ac.local,
    ac.last_refreshed_at,
    ac.creator_actor_id,
    ac.creator_local,
    ac.creator_name,
    ac.creator_preferred_username,
    ac.creator_avatar,
    ac.category_name,
    ac.number_of_subscribers,
    ac.number_of_posts,
    ac.number_of_comments,
    ac.hot_rank,
    u.id AS user_id,
    ( SELECT cf.id::boolean AS id
           FROM community_follower cf
          WHERE u.id = cf.user_id AND ac.id = cf.community_id) AS subscribed
   FROM user_ u
     CROSS JOIN ( SELECT c.id,
            c.name,
            c.title,
            c.icon,
            c.banner,
            c.description,
            c.category_id,
            c.creator_id,
            c.removed,
            c.published,
            c.updated,
            c.deleted,
            c.nsfw,
            c.actor_id,
            c.local,
            c.last_refreshed_at,
            u_1.actor_id AS creator_actor_id,
            u_1.local AS creator_local,
            u_1.name AS creator_name,
            u_1.preferred_username AS creator_preferred_username,
            u_1.avatar AS creator_avatar,
            cat.name AS category_name,
            COALESCE(ccs.number_of_subscribers, 0)::bigint AS number_of_subscribers,
            COALESCE(ccs.number_of_posts, 0)::bigint AS number_of_posts,
            COALESCE(ccs.number_of_comments, 0)::bigint AS number_of_comments,
            COALESCE(ccs.hot_rank, 0) AS hot_rank
           FROM community c
             LEFT JOIN user_ u_1 ON c.creator_id = u_1.id
             LEFT JOIN category cat ON c.category_id = cat.id
             LEFT JOIN hexbear.community_stat ccs ON ccs.community_id = c.id) ac
UNION ALL
 SELECT c.id,
    c.name,
    c.title,
    c.icon,
    c.banner,
    c.description,
    c.category_id,
    c.creator_id,
    c.removed,
    c.published,
    c.updated,
    c.deleted,
    c.nsfw,
    c.actor_id,
    c.local,
    c.last_refreshed_at,
    u.actor_id AS creator_actor_id,
    u.local AS creator_local,
    u.name AS creator_name,
    u.preferred_username AS creator_preferred_username,
    u.avatar AS creator_avatar,
    cat.name AS category_name,
    COALESCE(ccs.number_of_subscribers, 0)::bigint AS number_of_subscribers,
    COALESCE(ccs.number_of_posts, 0)::bigint AS number_of_posts,
    COALESCE(ccs.number_of_comments, 0)::bigint AS number_of_comments,
    COALESCE(ccs.hot_rank, 0) AS hot_rank,
    NULL::integer AS user_id,
    NULL::boolean AS subscribed
   FROM community c
     LEFT JOIN user_ u ON c.creator_id = u.id
     LEFT JOIN category cat ON c.category_id = cat.id
     LEFT JOIN hexbear.community_stat ccs ON ccs.community_id = c.id;


CREATE OR REPLACE VIEW hexbear.user_mention_fast_view
 AS
 SELECT ac.id,
    um.id AS user_mention_id,
    ac.creator_id,
    ac.creator_actor_id,
    ac.creator_local,
    ac.post_id,
    ac.post_name,
    ac.parent_id,
    ac.content,
    ac.removed,
    um.read,
    ac.published,
    ac.updated,
    ac.deleted,
    ac.community_id,
    ac.community_actor_id,
    ac.community_local,
    ac.community_name,
    ac.community_icon,
    ac.banned,
    ac.banned_from_community,
    ac.creator_name,
    ac.creator_preferred_username,
    ac.creator_avatar,
    ac.score,
    ac.upvotes,
    ac.downvotes,
    ac.hot_rank,
    ac.hot_rank_active,
    u.id AS user_id,
    COALESCE(cl.score::integer, 0) AS my_vote,
    ( SELECT cs.id::boolean AS id
           FROM comment_saved cs
          WHERE u.id = cs.user_id AND cs.comment_id = ac.id) AS saved,
    um.recipient_id,
    ( SELECT u_1.actor_id
           FROM user_ u_1
          WHERE u_1.id = um.recipient_id) AS recipient_actor_id,
    ( SELECT u_1.local
           FROM user_ u_1
          WHERE u_1.id = um.recipient_id) AS recipient_local
   FROM user_ u
     CROSS JOIN ( SELECT ca.id,
            ca.creator_id,
            ca.post_id,
            ca.parent_id,
            ca.content,
            ca.removed,
            ca.read,
            ca.published,
            ca.updated,
            ca.deleted,
            ca.ap_id,
            ca.local,
            ca.post_name,
            ca.community_id,
            ca.community_actor_id,
            ca.community_local,
            ca.community_name,
            ca.community_icon,
            ca.banned,
            ca.banned_from_community,
            ca.creator_actor_id,
            ca.creator_local,
            ca.creator_name,
            ca.creator_preferred_username,
            ca.creator_published,
            ca.creator_avatar,
            ca.creator_tags,
            ca.creator_community_tags,
            ca.score,
            ca.upvotes,
            ca.downvotes,
            ca.hot_rank,
            ca.hot_rank_active
           FROM hexbear.comment_fast_view ca) ac
     LEFT JOIN comment_like cl ON u.id = cl.user_id AND ac.id = cl.comment_id
     LEFT JOIN user_mention um ON um.comment_id = ac.id
UNION ALL
 SELECT ac.id,
    um.id AS user_mention_id,
    ac.creator_id,
    ac.creator_actor_id,
    ac.creator_local,
    ac.post_id,
    ac.post_name,
    ac.parent_id,
    ac.content,
    ac.removed,
    um.read,
    ac.published,
    ac.updated,
    ac.deleted,
    ac.community_id,
    ac.community_actor_id,
    ac.community_local,
    ac.community_name,
    ac.community_icon,
    ac.banned,
    ac.banned_from_community,
    ac.creator_name,
    ac.creator_preferred_username,
    ac.creator_avatar,
    ac.score,
    ac.upvotes,
    ac.downvotes,
    ac.hot_rank,
    ac.hot_rank_active,
    NULL::integer AS user_id,
    NULL::integer AS my_vote,
    NULL::boolean AS saved,
    um.recipient_id,
    ( SELECT u.actor_id
           FROM user_ u
          WHERE u.id = um.recipient_id) AS recipient_actor_id,
    ( SELECT u.local
           FROM user_ u
          WHERE u.id = um.recipient_id) AS recipient_local
   FROM hexbear.comment_fast_view ac
     LEFT JOIN user_mention um ON um.comment_id = ac.id;